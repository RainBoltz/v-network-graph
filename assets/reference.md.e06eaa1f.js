import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{c as s,o as a,X as e}from"./element-plus.efa1ba9e.js";const h='{"title":"Reference","description":"","frontmatter":{},"headers":[{"level":2,"title":"Attributes","slug":"attributes"},{"level":3,"title":"Nodes:","slug":"nodes"},{"level":3,"title":"Edges:","slug":"edges"},{"level":3,"title":"Layouts:","slug":"layouts"},{"level":3,"title":"UserConfigs:","slug":"userconfigs"},{"level":3,"title":"Layers:","slug":"layers"},{"level":3,"title":"EventHandlers:","slug":"eventhandlers"},{"level":2,"title":"Configurations","slug":"configurations"},{"level":2,"title":"Events (Vue component)","slug":"events-vue-component"},{"level":2,"title":"Events (with event-handler)","slug":"events-with-event-handler"},{"level":2,"title":"Instance Methods","slug":"instance-methods"}],"relativePath":"reference.md","lastUpdated":1642685233461}',t={},o=e(`<h1 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-hidden="true">#</a></h1><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-hidden="true">#</a></h2><div class="reference-table"><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Required</th><th>Default</th><th>Update</th></tr></thead><tbody><tr><td>nodes</td><td>nodes in the graph</td><td>Nodes</td><td>true</td><td>-</td><td>no</td></tr><tr><td>edges</td><td>edges in the graph</td><td>Edges</td><td>true</td><td>-</td><td>no</td></tr><tr><td>layouts</td><td>positions of the nodes</td><td>Layouts</td><td>false</td><td>{}</td><td>yes</td></tr><tr><td>selected-nodes</td><td>node ID list user selected</td><td>string[]</td><td>false</td><td>[]</td><td>yes</td></tr><tr><td>selected-edges</td><td>edge ID list user selected</td><td>string[]</td><td>false</td><td>[]</td><td>yes</td></tr><tr><td>zoom-level</td><td>zoom level</td><td>number</td><td>false</td><td>1.0</td><td>yes</td></tr><tr><td>configs</td><td>configurations</td><td>UserConfigs</td><td>false</td><td>{}</td><td>no</td></tr><tr><td>layers</td><td>additional layers</td><td>Layers</td><td>false</td><td>{}</td><td>no</td></tr><tr><td>event-handlers</td><td>handlers to get detailed events</td><td>EventHandlers</td><td>false</td><td>{}</td><td>no</td></tr></tbody></table><p>Attributes with the &quot;Update&quot; column set to yes will receive the update data with 2-way binding using v-model:attribute.</p><p>See below for definitions of the original interface types listed in the Type column.<br> (cf. <a href="https://github.com/dash14/v-network-graph/blob/main/src/common/types.ts" target="_blank" rel="noopener noreferrer">https://github.com/dash14/v-network-graph/blob/main/src/common/types.ts</a>)</p></div><div class="reference-attributes-types"><h3 id="nodes" tabindex="-1">Nodes: <a class="header-anchor" href="#nodes" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><pre><code><span class="token punctuation">{</span>
  <span class="token string">&quot;NODE_ID&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* with arbitrary information of this node */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="edges" tabindex="-1">Edges: <a class="header-anchor" href="#edges" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><pre><code><span class="token punctuation">{</span>
  <span class="token string">&quot;EDGE_ID&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    source<span class="token operator">:</span> <span class="token string">&quot;SOURCE_NODE_ID&quot;</span><span class="token punctuation">,</span>
    target<span class="token operator">:</span> <span class="token string">&quot;TARGET_NODE_ID&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">/* with arbitrary information of this edge */</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="layouts" tabindex="-1">Layouts: <a class="header-anchor" href="#layouts" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><pre><code><span class="token punctuation">{</span>
  <span class="token string">&quot;nodes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;NODE_ID&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token constant">POS_X</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">POS_Y</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="userconfigs" tabindex="-1">UserConfigs: <a class="header-anchor" href="#userconfigs" aria-hidden="true">#</a></h3><p>See <a href="#configurations">&quot;Configurations&quot;</a></p><h3 id="layers" tabindex="-1">Layers: <a class="header-anchor" href="#layers" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><pre><code><span class="token punctuation">{</span>
  <span class="token string">&quot;LAYER_ID&quot;</span><span class="token operator">:</span> <span class="token constant">POSITION</span><span class="token punctuation">,</span> <span class="token comment">// &quot;paths&quot; | &quot;nodes&quot; | &quot;focusring&quot; | &quot;edges&quot; | &quot;base&quot; | &quot;grid&quot; | &quot;background&quot; | &quot;root&quot;</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>The layer specified by <code>&quot;LAYER_ID&quot;</code> will be placed above the layer specified by <code>POSITION</code>.<br> The actual drawing of the layer is done using v-slots. Examples are in preparation.</p><h3 id="eventhandlers" tabindex="-1">EventHandlers: <a class="header-anchor" href="#eventhandlers" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><pre><code><span class="token punctuation">{</span>
  <span class="token string">&quot;*&quot;</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* processing... */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&quot;EVENT_TYPE&quot;</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* processing... */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>See also <a href="#events-with-event-handler">Events (with event-handler)</a>.<br> For more information of <code>type</code> and <code>event</code>, please refer to the following URL.<br><a href="https://github.com/dash14/v-network-graph/blob/main/src/common/types.ts#L63" target="_blank" rel="noopener noreferrer">https://github.com/dash14/v-network-graph/blob/main/src/common/types.ts#L63</a></p></div><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-hidden="true">#</a></h2><p>Indicates the contents to be specified in the <code>configs</code> of attributes.<br> All fields are optional. Values that are not specified will be used as default values.</p><div class="reference-configs"><div class="language-ts line-numbers-mode"><pre><code><span class="token punctuation">{</span>
  view<span class="token operator">:</span> <span class="token punctuation">{</span>
    scalingObjects<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token comment">// whether to expand the entire object.    default: false</span>
    panEnabled<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>     <span class="token comment">// whether the pan is enabled or not.      default: true</span>
    zoomEnabled<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>    <span class="token comment">// whether the zoom is enabled or not.     default: true</span>
    minZoomLevel<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>    <span class="token comment">// minimum zoom level.                     default: 0.1</span>
    maxZoomLevel<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>    <span class="token comment">// maximum zoom level.                     default: 64</span>
    fit<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>            <span class="token comment">// whether to fit the content when loaded. default: false</span>
    layoutHandler<span class="token operator">:</span> LayoutHandler<span class="token punctuation">,</span> <span class="token comment">// class to control node layout.   default: new SimpleLayout()</span>
    onSvgPanZoomInitialized<span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token comment">// callback on init svg-pan-zoom. default: undefined</span>
    grid<span class="token operator">:</span> <span class="token punctuation">{</span>
      visible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>         <span class="token comment">// whether to show the grid in the background. default: false</span>
      interval<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>         <span class="token comment">// grid line spacing.                          default: 10</span>
      thickIncrements<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>  <span class="token comment">// increments of ticks to draw thick lines.    default: 5</span>
      line<span class="token operator">:</span> <span class="token punctuation">{</span>                   <span class="token comment">// normal line style</span>
        color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>          <span class="token comment">//   default: &quot;#e0e0e0&quot;,</span>
        width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>          <span class="token comment">//   default: 1</span>
        dasharray<span class="token operator">:</span> <span class="token builtin">number</span>       <span class="token comment">//   default: 1</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      thick<span class="token operator">:</span> <span class="token punctuation">{</span>                  <span class="token comment">// thick line style</span>
        color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>          <span class="token comment">//   default: &quot;#cccccc&quot;,</span>
        width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>          <span class="token comment">//   default: 1</span>
        dasharray<span class="token operator">:</span> <span class="token builtin">number</span>       <span class="token comment">//   default: 0</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  node<span class="token operator">:</span> <span class="token punctuation">{</span>
    normal<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// * These fields can also be specified with the function as \`(node: Node) =&gt; value\`.</span>
      type<span class="token operator">:</span> <span class="token string">&quot;circle&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;rect&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// shape type.            default: &quot;circle&quot;</span>
      radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>           <span class="token comment">// radius of circle.      default: 16</span>
      width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>            <span class="token comment">// width of rect.         default: (not specified)</span>
      height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>           <span class="token comment">// height of rect.        default: (not specified)</span>
      borderRadius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>     <span class="token comment">// border radius of rect. default: (not specified)</span>
      color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>            <span class="token comment">// fill color.            default: &quot;#4466cc&quot;</span>
      strokeWidth<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>      <span class="token comment">// stroke width.          default: 0</span>
      strokeColor<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>              <span class="token comment">// stroke color.      default: &quot;#000000&quot;</span>
      strokeDasharray<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>  <span class="token comment">// stroke dash array. default: 0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    hover<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* same structure as \`node.normal\`. */</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
        <span class="token comment">// default: {</span>
        <span class="token comment">//   color: &quot;#3355bb&quot;,</span>
        <span class="token comment">//   ... all other values are same as \`normal\`</span>
        <span class="token comment">// }</span>
    selected<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* same structure as \`node.normal\`. */</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
        <span class="token comment">// default: undefined</span>
    draggable<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token comment">// whether the node is draggable or not.  default: true</span>
    selectable<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
        <span class="token comment">// whether the node is selectable or not. default: false</span>
        <span class="token comment">// When specified as a number, it means the max number of nodes that can be selected.</span>
    label<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// * These fields can also be specified with the function as \`(node) =&gt; value\`.</span>
      visible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>         <span class="token comment">// whether the node&#39;s label is visible or not. default: true</span>
      fontFamily<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>  <span class="token comment">// font family.       default: undefined</span>
      fontSize<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>                <span class="token comment">// font size.         default: 11</span>
      lineHeight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>              <span class="token comment">// line height (multiplier for font size). default: 1.1</span>
      color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>                   <span class="token comment">// font color.        default: &quot;#000000&quot;</span>
      background<span class="token operator">:</span> <span class="token punctuation">{</span>                    <span class="token comment">// background config. default: undefined</span>
        visible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>          <span class="token comment">// whether the background is visible or not.</span>
        color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>             <span class="token comment">// background color.</span>
        padding<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">{</span>        <span class="token comment">// padding.</span>
          vertical<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>        <span class="token comment">// vertical padding.</span>
          horizontal<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>      <span class="token comment">// horizontal padding.</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        borderRadius<span class="token operator">:</span> <span class="token builtin">number</span>       <span class="token comment">// border radius.</span>
      <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
      margin<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>                  <span class="token comment">// margin from node. default: 4</span>
      direction<span class="token operator">:</span> NodeLabelDirection<span class="token punctuation">,</span>   <span class="token comment">// node label display direction. default: SOUTH</span>
      text<span class="token operator">:</span> <span class="token builtin">string</span>    <span class="token comment">// field name in the node object to use as the label. default: &quot;name&quot;</span>
                      <span class="token comment">// if function is specified, the return value is string of label.</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    focusring<span class="token operator">:</span> <span class="token punctuation">{</span>
      visible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token comment">// whether the focus ring is visible or not.     default: true</span>
      width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>    <span class="token comment">// line width of the focus ring.                 default: 4</span>
      padding<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>  <span class="token comment">// distance between the focus ring and the node. default: 3</span>
      color<span class="token operator">:</span> <span class="token builtin">string</span>     <span class="token comment">// fill color.                                   default: &quot;#eebb00&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    transition<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>  <span class="token comment">// entering/leaving transition.      default: undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  edge<span class="token operator">:</span> <span class="token punctuation">{</span>
    normal<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// * These fields can also be specified with the function as \`(edge: Edge) =&gt; value\`.</span>
      width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>           <span class="token comment">// width of edge.                           default: 2</span>
      color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>           <span class="token comment">// line color.                              default: &quot;#4466cc&quot;</span>
      dasharray<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>        <span class="token comment">// stroke dash array. default: 0</span>
      linecap<span class="token operator">:</span> <span class="token string">&quot;butt&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;round&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;square&quot;</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token comment">// stroke linecap. default: &quot;butt&quot;</span>
      animate<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>        <span class="token comment">// whether to animate or not.               default: false</span>
      animationSpeed<span class="token operator">:</span> <span class="token builtin">number</span>   <span class="token comment">// animation speed.                         default: 100</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    hover<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* same structure as \`normal\`. */</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
        <span class="token comment">// default: {</span>
        <span class="token comment">//   color: &quot;#3355bb&quot;,</span>
        <span class="token comment">//   ... all other values are same as \`edge.normal\`</span>
        <span class="token comment">// },</span>
    selected<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* same structure as \`normal\`. */</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
        <span class="token comment">// default: {</span>
        <span class="token comment">//   color: &quot;#dd8800&quot;,</span>
        <span class="token comment">//   dasharray: (wider than \`normal\`),</span>
        <span class="token comment">//   ... all other values are same as \`edge.normal\`</span>
        <span class="token comment">// }</span>
    selectable<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span>edge<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
        <span class="token comment">// whether the edge is selectable or not. default: false</span>
        <span class="token comment">// When specified as a number, it means the max number of edges that can be selected.</span>
    gap<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>edges<span class="token operator">:</span> Edges<span class="token punctuation">,</span> configs<span class="token operator">:</span> Configs<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment">// number: distance between edges.</span>
        <span class="token comment">// func : function to calculate gap from edge list between nodes.</span>
        <span class="token comment">// default: 3</span>
    type<span class="token operator">:</span> <span class="token string">&quot;straight&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;curve&quot;</span><span class="token punctuation">,</span> <span class="token comment">// edge type when there are multiple edges between the nodes.</span>
    marker<span class="token operator">:</span> <span class="token punctuation">{</span>
      source<span class="token operator">:</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span>  <span class="token string">&quot;none&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;arrow&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;angle&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;circle&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span>
                              <span class="token comment">// type of marker.                          default: &quot;none&quot;</span>
        width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>        <span class="token comment">// width of marker.                         default: 5</span>
        height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>       <span class="token comment">// height of marker.                        default: 5</span>
        margin<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>       <span class="token comment">// distance between marker and end of edge. default: -1</span>
        units<span class="token operator">:</span> <span class="token string">&quot;strokeWidth&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;userSpaceOnUse&quot;</span><span class="token punctuation">,</span>
                              <span class="token comment">// units of width, height and margin.            default: &quot;strokeWidth&quot;</span>
        color<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// color of marker. null: same as edge color.    default: null</span>
        customId<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>
                              <span class="token comment">// custom marker ID for marker type is &quot;custom&quot;. default: undefined</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      target<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* same structure as \`source\`. */</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    margin<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token comment">// margin from end of node (if null, the edge end is the center of node).</span>
        <span class="token comment">// default: null</span>
    summarize<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>edges<span class="token operator">:</span> Edges<span class="token punctuation">,</span> configs<span class="token operator">:</span> Configs<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment">// true : summarize when the width of the edge becomes larger than the node.</span>
        <span class="token comment">// false: do not summarize.</span>
        <span class="token comment">// func : function to determine whether to summarize from edge list between nodes.</span>
        <span class="token comment">// default: func (if type is &quot;curve&quot; then false, otherwise summarize if the edge</span>
        <span class="token comment">//                is wider than the node size)</span>
    summarized<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// configs for summarized edge</span>
      label<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// * These fields can also be specified with the function as</span>
        <span class="token comment">//   \`(edges: Record&lt;string, Edge&gt;) =&gt; value\`.</span>
        fontSize<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>  <span class="token comment">// font size.  default: 10</span>
        color<span class="token operator">:</span> <span class="token builtin">string</span>      <span class="token comment">// font color. default: &quot;#4466cc&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      shape<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* same structure as \`node.normal\`. */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// * These fields can also be specified with the function as</span>
        <span class="token comment">//   \`(edges: Record&lt;string, Edge&gt;) =&gt; value\`.</span>
        <span class="token comment">// default: {</span>
        <span class="token comment">//   type: &quot;rect&quot;,</span>
        <span class="token comment">//   width: 12,</span>
        <span class="token comment">//   height: 12,</span>
        <span class="token comment">//   borderRadius: 3,</span>
        <span class="token comment">//   color: &quot;#ffffff&quot;,</span>
        <span class="token comment">//   strokeWidth: 1,</span>
        <span class="token comment">//   strokeColor: &quot;#4466cc&quot;,</span>
        <span class="token comment">//   strokeDasharray: undefined</span>
        <span class="token comment">// }</span>
      stroke<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* same structure as \`edge.normal\`. */</span> <span class="token punctuation">}</span>
        <span class="token comment">// * These fields can also be specified with the function as</span>
        <span class="token comment">//   \`(edges: Record&lt;string, Edge&gt;) =&gt; value\`.</span>
        <span class="token comment">// default: {</span>
        <span class="token comment">//   width: 5,</span>
        <span class="token comment">//   color: &quot;#4466cc&quot;,</span>
        <span class="token comment">//   dasharray: undefined,</span>
        <span class="token comment">//   linecap: undefined,</span>
        <span class="token comment">//   animate: false,</span>
        <span class="token comment">//   animationSpeed: 50</span>
        <span class="token comment">// }</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    keepOrder<span class="token operator">:</span> <span class="token string">&quot;clock&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;vertical&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;horizontal&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// orientation to be considered when keeping multiple edge alignments.</span>
      <span class="token comment">//   &quot;clock&quot;: Keep the forward/backward when viewed as a clock.</span>
      <span class="token comment">//   &quot;vertical&quot;: Keep the vertical alignment.</span>
      <span class="token comment">//   &quot;horizontal&quot;: Keep the horizontal alignment.</span>
      <span class="token comment">// default: &quot;clock&quot;</span>
    label<span class="token operator">:</span> <span class="token punctuation">{</span>
      fontFamily<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>  <span class="token comment">// font family.       default: undefined</span>
      fontSize<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>                <span class="token comment">// font size.         default: 11</span>
      lineHeight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>              <span class="token comment">// line height (multiplier for font size). default: 1.1</span>
      color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>                   <span class="token comment">// font color.        default: &quot;#000000&quot;</span>
      background<span class="token operator">:</span> <span class="token punctuation">{</span>                    <span class="token comment">// background config. default: undefined</span>
        visible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>          <span class="token comment">// whether the background is visible or not.</span>
        color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>             <span class="token comment">// background color.</span>
        padding<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">{</span>        <span class="token comment">// padding.</span>
          vertical<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>        <span class="token comment">// vertical padding.</span>
          horizontal<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>      <span class="token comment">// horizontal padding.</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        borderRadius<span class="token operator">:</span> <span class="token builtin">number</span>       <span class="token comment">// border radius.</span>
      <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
      margin<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>              <span class="token comment">// distance from edge stroke. default: 4</span>
      padding<span class="token operator">:</span> <span class="token builtin">number</span>              <span class="token comment">// distance from end node. default: 4</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  path<span class="token operator">:</span> <span class="token punctuation">{</span>
    visible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>     <span class="token comment">// whether the paths are visible or not.  default: false</span>
    clickable<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>   <span class="token comment">// whether paths are clickable or not.    default: false</span>
    curveInNode<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token comment">// whether to curve paths within nodes.   default: false</span>
    end<span class="token operator">:</span> <span class="token string">&quot;centerOfNode&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;edgeOfNode&quot;</span><span class="token punctuation">,</span> <span class="token comment">// position of end of path. default: &quot;centerOfNode&quot;</span>
    margin<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>       <span class="token comment">// margin from end of path.               default: 0</span>
    path<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// * These fields can also be specified with the function as \`(path) =&gt; value\`.</span>
      width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>      <span class="token comment">// width of path. default: 6</span>
      color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>      <span class="token comment">// path color. default: (Func to select a color from a hash of edges.)</span>

      dasharray<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>         <span class="token comment">// stroke dash array. default: undefined</span>
      linecap<span class="token operator">:</span> <span class="token string">&quot;butt&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;round&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;square&quot;</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>  <span class="token comment">// stroke linecap. default: &quot;round&quot;</span>
      linejoin<span class="token operator">:</span> <span class="token string">&quot;miter&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;round&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;bevel&quot;</span><span class="token punctuation">,</span>            <span class="token comment">// stroke linejoin. default: &quot;round&quot;</span>
      animate<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>                       <span class="token comment">// whether to animate or not. default: false</span>
      animationSpeed<span class="token operator">:</span> <span class="token builtin">number</span>                  <span class="token comment">// animation speed.           default: 50</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    transition<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>  <span class="token comment">// entering/leaving transition.         default: undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br></div></div></div><h2 id="events-vue-component" tabindex="-1">Events (Vue component) <a class="header-anchor" href="#events-vue-component" aria-hidden="true">#</a></h2><div class="reference-table"><table><thead><tr><th>Event</th><th>Description</th></tr></thead><tbody><tr><td>update:zoomLevel</td><td>update zoom level</td></tr><tr><td>update:selectedNodes</td><td>update selected nodes</td></tr><tr><td>update:selectedEdges</td><td>update selected edges</td></tr><tr><td>update:layouts</td><td>update layouts</td></tr></tbody></table></div><h2 id="events-with-event-handler" tabindex="-1">Events (with event-handler) <a class="header-anchor" href="#events-with-event-handler" aria-hidden="true">#</a></h2><p>The following is a list of events that can be specified for attribute <code>event-handlers</code>.</p><div class="reference-table"><table><thead><tr><th>Event type</th><th>Description</th><th>Event value</th></tr></thead><tbody><tr><td>&quot;view:load&quot;</td><td>component loaded</td><td><code>undefined</code></td></tr><tr><td>&quot;view:unload&quot;</td><td>mouse mode changed</td><td><code>undefined</code></td></tr><tr><td>&quot;view:mode&quot;</td><td>component unloaded</td><td><code>&quot;default&quot;</code> / <code>&quot;node&quot;</code> / <code>&quot;edge&quot;</code></td></tr><tr><td>&quot;view:click&quot;</td><td>background clicked</td><td><code>{ event: PointerEvent }</code></td></tr><tr><td>&quot;view:zoom&quot;</td><td>zoom level changed</td><td><code>number</code> (new zoom level)</td></tr><tr><td>&quot;view:pan&quot;</td><td>panned</td><td><code>{ x: number, y: number }</code></td></tr><tr><td>&quot;view:fit&quot;</td><td>fitted</td><td><code>undefined</code></td></tr><tr><td>&quot;view:resize&quot;</td><td>container resized</td><td><code>{ x: number, y: number, width: number, height: number }</code></td></tr><tr><td>&quot;view:contextmenu&quot;</td><td>background right-clicked</td><td><code>{ event: MouseEvent }</code><br> (To disable the browser&#39;s standard context menu, you have to call <code>event.preventDefault()</code> in the handler.) </td></tr><tr><td>&quot;node:click&quot;</td><td>node clicked</td><td rowspan="5"><code>{ node: string, event: PointerEvent }</code></td></tr><tr><td>&quot;node:pointerover&quot;</td><td>pointer over on node</td></tr><tr><td>&quot;node:pointerout&quot;</td><td>pointer out on node</td></tr><tr><td>&quot;node:pointerdown&quot;</td><td>pointer down on node</td></tr><tr><td>&quot;node:pointerup&quot;</td><td>pointer up on node</td></tr><tr><td>&quot;node:contextmenu&quot;</td><td>node right-clicked</td><td><code>{ node: string, event: MouseEvent }</code><br> (To disable the browser&#39;s standard context menu, you have to call <code>event.preventDefault()</code> in the handler.) </td></tr><tr><td>&quot;node:dragstart&quot;</td><td>node drag started</td><td><code>{ NODE_ID: { x: number; y: number }, ... }</code></td></tr><tr><td>&quot;node:pointermove&quot;</td><td>pointer move on node</td><td><code>{ node: string, event: PointerEvent }</code></td></tr><tr><td>&quot;node:dragend&quot;</td><td>node drag ended</td><td><code>{ NODE_ID: { x: number; y: number }, ... }</code></td></tr><tr><td>&quot;node:select&quot;</td><td>node selected</td><td><code>[ NODE_ID, ...]</code></td></tr><tr><td>&quot;edge:click&quot;</td><td>edge clicked</td><td rowspan="5"> not summarized edge:<br><code>{ edge: EDGE_ID, edges: [EDGE_ID], event: PointerEvent, summarized: false }</code><br><br> summarized edge:<br><code>{ edges: [EDGE_ID, ...], event: PointerEvent, summarized: true }</code></td></tr><tr><td>&quot;edge:pointerover&quot;</td><td>pointer over on edge</td></tr><tr><td>&quot;edge:pointerout&quot;</td><td>pointer out on edge</td></tr><tr><td>&quot;edge:pointerdown&quot;</td><td>pointer down on edge</td></tr><tr><td>&quot;edge:pointerup&quot;</td><td>pointer up on edge</td></tr><tr><td>&quot;edge:contextmenu&quot;</td><td>edge right-clicked</td><td> not summarized edge:<br><code>{ edge: EDGE_ID, edges: [EDGE_ID], event: MouseEvent, summarized: false }</code><br><br> summarized edge:<br><code>{ edges: [EDGE_ID, ...], event: MouseEvent, summarized: true }</code></td></tr><tr><td>&quot;edge:select&quot;</td><td>edge selected</td><td><code>[ EDGE_ID, ... ]</code></td></tr><tr><td>&quot;path:click&quot;</td><td>path clicked</td><td><code>{ path: Path, event: MouseEvent }</code></td></tr><tr><td>&quot;path:contextmenu&quot;</td><td>path right-clicked</td><td><code>{ path: Path, event: MouseEvent }</code></td></tr></tbody></table></div><h2 id="instance-methods" tabindex="-1">Instance Methods <a class="header-anchor" href="#instance-methods" aria-hidden="true">#</a></h2><div class="reference-table"><table class="instance-methods"><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>fitToContents(): void</td><td>Perform zooming/panning according to the graph size.</td></tr><tr><td>getAsSvg(): string</td><td>Get the network-graph contents as SVG text data.</td></tr><tr><td>getPan(): {x, y}</td><td>Get the pan vector.</td></tr><tr><td>getSizes(): Sizes</td><td> Get all calculate svg dimensions. <br> Sizes: <code>{width, height, viewBox:{x, y, width, height}}</code></td></tr><tr><td>panTo(point: {x, y}): void</td><td>Pan to a rendered position.</td></tr><tr><td>panBy(point: {x, y}): void</td><td>Relatively pan the graph by a specified rendered position vector.</td></tr><tr><td>panToCenter(): void</td><td>Perform a pan to center the contents of the network graph.</td></tr><tr><td>translateFromDomToSvgCoordinates(point: {x, y}): {x, y}</td><td>Translate from DOM to SVG coordinates.</td></tr><tr><td>translateFromSvgToDomCoordinates(point: {x, y}): {x, y}</td><td>Translate from SVG to DOM coordinates.</td></tr><tr><td>zoomIn(): void</td><td>Perform zoom-in.</td></tr><tr><td>zoomOut(): void</td><td>Perform zoom-out.</td></tr></tbody></table></div>`,14),p=[o];function l(r,c,u,i,d,m){return a(),s("div",null,p)}var f=n(t,[["render",l]]);export{h as __pageData,f as default};
